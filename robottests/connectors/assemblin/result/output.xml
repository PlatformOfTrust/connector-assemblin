<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.5 on darwin)" generated="20201021 12:14:30.112" rpa="false">
<suite id="s1" name="Connector Tests" source="/Users/daniilsmirnov/Connector Engine/assemblin-connector/robottests/connectors/assemblin/connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:30.350" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:30.349" endtime="20201021 12:14:30.350"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:30.350" level="INFO">${now} = 2020-10-21T09:14:30+00:00</msg>
<status status="PASS" starttime="20201021 12:14:30.350" endtime="20201021 12:14:30.350"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:30.350" endtime="20201021 12:14:30.350"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:30.351" endtime="20201021 12:14:30.351"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:30.351" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:30.351" endtime="20201021 12:14:30.351"></status>
</kw>
<msg timestamp="20201021 12:14:30.351" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:30.349" endtime="20201021 12:14:30.352"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:30.352" level="INFO">${signature} = puL5m3E04AWJhyZiVW9zY4fs5RsM1v34Ddm1kidNdcA=</msg>
<status status="PASS" starttime="20201021 12:14:30.352" endtime="20201021 12:14:30.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:30.353" level="INFO">puL5m3E04AWJhyZiVW9zY4fs5RsM1v34Ddm1kidNdcA=</msg>
<status status="PASS" starttime="20201021 12:14:30.353" endtime="20201021 12:14:30.353"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:30.353" endtime="20201021 12:14:30.353"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:30.353" endtime="20201021 12:14:33.536"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:33.537" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards-ontotest.oftrust.net/v2/Context/DataProductOutput/Sensor/"
        },
        "data": {
            "type": "object",
            "properties": {
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "measurements": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "value"
                                    ]
                                }
                            },
                            "id": {
                                "type": "object",
                                "properties": {
                                    "idRoom": {
                                        "type": "string"
                                    },
                                    "idProperty": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "idProperty",
                                    "idRoom"
                                ]
                            }
                        },
                        "required": [
                            "id",
                            "measurements"
                        ]
                    },
                    "default": [
                        {
                            "measurements": [
                                {
                                    "value": "19.900000",
                                    "@type": "MeasureAirTemperatureCelsiusDegree"
                                },
                                {
                                    "value": "407.000000",
                                    "@type": "MeasureAirCO2LevelPPM"
                                }
                            ],
                            "id": {
                                "idRoom": "A4018",
                                "idProperty": "AI200"
                            }
                        }
                    ]
                }
            },
            "required": [
                "sensors"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-10-21T09:14:33+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "https://api-external-test.oftrust.net/assemblin/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "QBV48mFf6hYsSH55Kwqn0BMJEAJpQAWS1PR+sjcCofWcjb4r9PW7gDgiE3cJCVPLXx/YkSxtB05hJritVYoX3mb8VvKbXuwNJxxLEq+PhIfpclNQ+B/RHymWqFnHEAD9eKtCosgUEalS89j5+DDAPZS+JJOblhtwCKwIzkbQnkp6ha850Ae/sYUN0mimI2dZQv0NLDBKHLpUEg4BOEoX6NyJoQuu3seBcH+qHjZgWiXQ8QqzMAtdYAyxkytye9Jwm6di0Q7xBcBY32I4W8zDy9ImFpxKaS+qFhBiujMKxOkUGmuGQVLOaEkRwBHZwJKYKYEdttIClWIwk4cM/Bgj7O65ClXKswfaaWt7MxjLJmoURoQPnuJBmxR0VwsxADL+//gj8pFcR8GQr48n4amAOR18egdRwQqPReaz9UE7abS8XTP6l4+AD/yhLhHGt8wm/xI7XI6ISpqPlsSO54HS7AFwZzV8UDJ8Ja14NBOJLD//QWK6MBMzMWdIFHj+IUy0EYLrt23fl+tbrq1sKrpNh3FmqbIe0qKz8MMSj0DjdXHGeQ7lZcEugoaZYb1Mjo5rBG7UVatCCe3e/RRroH1xRMUXOrkOGDjKdIaTpX1lNyvZYA/I111AgZmT+Uth2bGMmlD841y2fSk7gAUTmLJAv4s4SYcjYEZc410p6i6HDnA="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:33.537" endtime="20201021 12:14:33.545"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:30.352" endtime="20201021 12:14:33.546"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.546" endtime="20201021 12:14:33.547"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards-ontotest.oftrust.net/v2/Context/DataProductOutput/Sensor/</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.547" endtime="20201021 12:14:33.547"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.547" endtime="20201021 12:14:33.548"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.549" endtime="20201021 12:14:33.549"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors 0 measurements</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.549" endtime="20201021 12:14:33.550"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data sensors 0 id</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.550" endtime="20201021 12:14:33.551"></status>
</kw>
<tags>
<tag>bug-0001</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:30.348" endtime="20201021 12:14:33.551" critical="yes"></status>
</test>
<test id="s1-t2" name="fetch, 422, Missing data for timestamp required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:33.553" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:33.552" endtime="20201021 12:14:33.553"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:33.553" level="INFO">${now} = 2020-10-21T09:14:33+00:00</msg>
<status status="PASS" starttime="20201021 12:14:33.553" endtime="20201021 12:14:33.553"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.553" endtime="20201021 12:14:33.553"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.553" endtime="20201021 12:14:33.554"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:33.554" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:33.554" endtime="20201021 12:14:33.554"></status>
</kw>
<msg timestamp="20201021 12:14:33.554" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:33.552" endtime="20201021 12:14:33.554"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.555" endtime="20201021 12:14:33.555"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:33.556" level="INFO">${signature} = +QLcG2aXgOGnSyB7aEa6kz98bN5lIS+rviTYnzVDxmU=</msg>
<status status="PASS" starttime="20201021 12:14:33.555" endtime="20201021 12:14:33.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:33.556" level="INFO">+QLcG2aXgOGnSyB7aEa6kz98bN5lIS+rviTYnzVDxmU=</msg>
<status status="PASS" starttime="20201021 12:14:33.556" endtime="20201021 12:14:33.556"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.556" endtime="20201021 12:14:33.556"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.556" endtime="20201021 12:14:33.689"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:33.690" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "timestamp"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:33.689" endtime="20201021 12:14:33.692"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:33.555" endtime="20201021 12:14:33.692"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.692" endtime="20201021 12:14:33.693"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.694" endtime="20201021 12:14:33.694"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message timestamp 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.695" endtime="20201021 12:14:33.695"></status>
</kw>
<tags>
<tag>bug-0001</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:33.551" endtime="20201021 12:14:33.696" critical="yes"></status>
</test>
<test id="s1-t3" name="fetch, 422, Missing data for parameters required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:33.698" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:33.697" endtime="20201021 12:14:33.698"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:33.699" level="INFO">${now} = 2020-10-21T09:14:33+00:00</msg>
<status status="PASS" starttime="20201021 12:14:33.698" endtime="20201021 12:14:33.699"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.699" endtime="20201021 12:14:33.699"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.699" endtime="20201021 12:14:33.700"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:33.700" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:33.700" endtime="20201021 12:14:33.700"></status>
</kw>
<msg timestamp="20201021 12:14:33.701" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:33.697" endtime="20201021 12:14:33.701"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>parameters</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.701" endtime="20201021 12:14:33.701"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:33.702" level="INFO">${signature} = gaVA/vDyXSKSBQz6DW+bE9YSN5C8Pk7xEIrJHc7aurU=</msg>
<status status="PASS" starttime="20201021 12:14:33.702" endtime="20201021 12:14:33.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:33.702" level="INFO">gaVA/vDyXSKSBQz6DW+bE9YSN5C8Pk7xEIrJHc7aurU=</msg>
<status status="PASS" starttime="20201021 12:14:33.702" endtime="20201021 12:14:33.703"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.703" endtime="20201021 12:14:33.703"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:33.703" endtime="20201021 12:14:34.198"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:34.199" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "default": "External translator returns an invalid response."
                },
                "status": {
                    "type": "integer",
                    "default": 502
                },
                "translator_response": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "default": 422
                        },
                        "data": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "default": 422
                                        },
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.ids[0].idRoom": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.ids[0].idProperty": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.dataTypes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "parameters",
                                                "parameters.dataTypes",
                                                "parameters.ids",
                                                "parameters.ids[0].idProperty",
                                                "parameters.ids[0].idRoom"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "status"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    },
                    "required": [
                        "data",
                        "status"
                    ]
                }
            },
            "required": [
                "message",
                "status",
                "translator_response"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:34.199" endtime="20201021 12:14:34.204"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:33.701" endtime="20201021 12:14:34.205"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.205" endtime="20201021 12:14:34.206"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.206" endtime="20201021 12:14:34.207"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.207" endtime="20201021 12:14:34.208"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.208" endtime="20201021 12:14:34.209"></status>
</kw>
<tags>
<tag>bug-0002</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:33.696" endtime="20201021 12:14:34.209" critical="yes"></status>
</test>
<test id="s1-t4" name="fetch, 422, Missing data for ids required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:34.211" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:34.210" endtime="20201021 12:14:34.211"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:34.211" level="INFO">${now} = 2020-10-21T09:14:34+00:00</msg>
<status status="PASS" starttime="20201021 12:14:34.211" endtime="20201021 12:14:34.211"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.211" endtime="20201021 12:14:34.212"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.212" endtime="20201021 12:14:34.212"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:34.213" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:34.212" endtime="20201021 12:14:34.213"></status>
</kw>
<msg timestamp="20201021 12:14:34.213" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:34.210" endtime="20201021 12:14:34.213"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>ids</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.213" endtime="20201021 12:14:34.214"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:34.215" level="INFO">${signature} = cnZdt4FVWv+kUwB8lWdQtG9KKqRpy0fQ2MzRsskz1HE=</msg>
<status status="PASS" starttime="20201021 12:14:34.214" endtime="20201021 12:14:34.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:34.215" level="INFO">cnZdt4FVWv+kUwB8lWdQtG9KKqRpy0fQ2MzRsskz1HE=</msg>
<status status="PASS" starttime="20201021 12:14:34.215" endtime="20201021 12:14:34.215"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.215" endtime="20201021 12:14:34.216"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.216" endtime="20201021 12:14:34.535"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:34.536" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "default": "External translator returns an invalid response."
                },
                "status": {
                    "type": "integer",
                    "default": 502
                },
                "translator_response": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "default": 422
                        },
                        "data": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "default": 422
                                        },
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "parameters.ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.ids[0].idRoom": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.ids[0].idProperty": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "parameters.ids",
                                                "parameters.ids[0].idProperty",
                                                "parameters.ids[0].idRoom"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "status"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    },
                    "required": [
                        "data",
                        "status"
                    ]
                }
            },
            "required": [
                "message",
                "status",
                "translator_response"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:34.535" endtime="20201021 12:14:34.538"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:34.214" endtime="20201021 12:14:34.539"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.539" endtime="20201021 12:14:34.539"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.540" endtime="20201021 12:14:34.540"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.540" endtime="20201021 12:14:34.541"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters.ids 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.541" endtime="20201021 12:14:34.541"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters.ids[0].idRoom 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.542" endtime="20201021 12:14:34.542"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters.ids[0].idProperty 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.542" endtime="20201021 12:14:34.543"></status>
</kw>
<tags>
<tag>bug-0003</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:34.209" endtime="20201021 12:14:34.543" critical="yes"></status>
</test>
<test id="s1-t5" name="fetch, 422, Missing data for dataTypes required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:34.545" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:34.544" endtime="20201021 12:14:34.545"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:34.545" level="INFO">${now} = 2020-10-21T09:14:34+00:00</msg>
<status status="PASS" starttime="20201021 12:14:34.545" endtime="20201021 12:14:34.545"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.545" endtime="20201021 12:14:34.545"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.546" endtime="20201021 12:14:34.546"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:34.546" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:34.546" endtime="20201021 12:14:34.547"></status>
</kw>
<msg timestamp="20201021 12:14:34.547" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:34.544" endtime="20201021 12:14:34.547"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>dataTypes</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.547" endtime="20201021 12:14:34.547"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:34.548" level="INFO">${signature} = fSEmBXro+3q6vuklrkwaX5wCr0JPqUi+GkIfaC7jHBg=</msg>
<status status="PASS" starttime="20201021 12:14:34.548" endtime="20201021 12:14:34.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:34.549" level="INFO">fSEmBXro+3q6vuklrkwaX5wCr0JPqUi+GkIfaC7jHBg=</msg>
<status status="PASS" starttime="20201021 12:14:34.548" endtime="20201021 12:14:34.549"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.549" endtime="20201021 12:14:34.549"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:34.549" endtime="20201021 12:14:35.005"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:35.006" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "default": "External translator returns an invalid response."
                },
                "status": {
                    "type": "integer",
                    "default": 502
                },
                "translator_response": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "default": 422
                        },
                        "data": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "default": 422
                                        },
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "parameters.dataTypes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "parameters.dataTypes"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "status"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    },
                    "required": [
                        "data",
                        "status"
                    ]
                }
            },
            "required": [
                "message",
                "status",
                "translator_response"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:35.006" endtime="20201021 12:14:35.010"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:34.547" endtime="20201021 12:14:35.010"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.010" endtime="20201021 12:14:35.011"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.011" endtime="20201021 12:14:35.012"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.012" endtime="20201021 12:14:35.013"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters.dataTypes 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.013" endtime="20201021 12:14:35.014"></status>
</kw>
<tags>
<tag>bug-0004</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:34.543" endtime="20201021 12:14:35.014" critical="yes"></status>
</test>
<test id="s1-t6" name="fetch, 422, Empty ids">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:35.017" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:35.016" endtime="20201021 12:14:35.017"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:35.017" level="INFO">${now} = 2020-10-21T09:14:35+00:00</msg>
<status status="PASS" starttime="20201021 12:14:35.017" endtime="20201021 12:14:35.017"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.017" endtime="20201021 12:14:35.018"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.018" endtime="20201021 12:14:35.018"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:35.019" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:35.018" endtime="20201021 12:14:35.019"></status>
</kw>
<msg timestamp="20201021 12:14:35.019" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:35.016" endtime="20201021 12:14:35.019"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>ids=@{EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.019" endtime="20201021 12:14:35.020"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:35.021" level="INFO">${signature} = q3HuE/IU+On05Yd/dIVihME1IpDszo3jE/yai+qoajs=</msg>
<status status="PASS" starttime="20201021 12:14:35.020" endtime="20201021 12:14:35.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:35.021" level="INFO">q3HuE/IU+On05Yd/dIVihME1IpDszo3jE/yai+qoajs=</msg>
<status status="PASS" starttime="20201021 12:14:35.021" endtime="20201021 12:14:35.021"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.021" endtime="20201021 12:14:35.022"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:35.022" endtime="20201021 12:14:36.486"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:36.487" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "default": "External translator returns an invalid response."
                },
                "status": {
                    "type": "integer",
                    "default": 502
                },
                "translator_response": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "default": 422
                        },
                        "data": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "default": 422
                                        },
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "parameters.ids[0].idRoom": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                },
                                                "parameters.ids[0].idProperty": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "Missing data for required field."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "parameters.ids[0].idProperty",
                                                "parameters.ids[0].idRoom"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "status"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    },
                    "required": [
                        "data",
                        "status"
                    ]
                }
            },
            "required": [
                "message",
                "status",
                "translator_response"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:36.487" endtime="20201021 12:14:36.491"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:35.020" endtime="20201021 12:14:36.492"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.492" endtime="20201021 12:14:36.493"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.493" endtime="20201021 12:14:36.494"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.494" endtime="20201021 12:14:36.495"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters.ids[0].idRoom 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.495" endtime="20201021 12:14:36.496"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters.ids[0].idProperty 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.496" endtime="20201021 12:14:36.497"></status>
</kw>
<tags>
<tag>bug-0005</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:35.015" endtime="20201021 12:14:36.497" critical="yes"></status>
</test>
<test id="s1-t7" name="fetch, 200, Empty dataTypes">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201021 12:14:36.499" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}}</msg>
<status status="PASS" starttime="20201021 12:14:36.498" endtime="20201021 12:14:36.499"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20201021 12:14:36.499" level="INFO">${now} = 2020-10-21T09:14:36+00:00</msg>
<status status="PASS" starttime="20201021 12:14:36.499" endtime="20201021 12:14:36.499"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.500" endtime="20201021 12:14:36.500"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.500" endtime="20201021 12:14:36.500"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20201021 12:14:36.501" level="INFO">${json_string} = {"productCode": "assemblin-prod-test-1", "parameters": {"ids": [{"idProperty": "AI200", "idRoom": "A4018"}], "dataTypes": ["MeasureAirCO2LevelPPM", "MeasureAirTemperatureCelsiusDegree"]}, "timestamp":...</msg>
<status status="PASS" starttime="20201021 12:14:36.500" endtime="20201021 12:14:36.501"></status>
</kw>
<msg timestamp="20201021 12:14:36.501" level="INFO">${body} = {'productCode': 'assemblin-prod-test-1', 'parameters': {'ids': [{'idProperty': 'AI200', 'idRoom': 'A4018'}], 'dataTypes': ['MeasureAirCO2LevelPPM', 'MeasureAirTemperatureCelsiusDegree']}, 'timestamp':...</msg>
<status status="PASS" starttime="20201021 12:14:36.498" endtime="20201021 12:14:36.501"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>dataTypes=@{EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.501" endtime="20201021 12:14:36.502"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201021 12:14:36.503" level="INFO">${signature} = PGvlngmHczbAkdX84LDCo1TwfO1lzcvo/zr4BkM7YsM=</msg>
<status status="PASS" starttime="20201021 12:14:36.502" endtime="20201021 12:14:36.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${signature}</arg>
</arguments>
<msg timestamp="20201021 12:14:36.503" level="INFO">PGvlngmHczbAkdX84LDCo1TwfO1lzcvo/zr4BkM7YsM=</msg>
<status status="PASS" starttime="20201021 12:14:36.503" endtime="20201021 12:14:36.503"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.504" endtime="20201021 12:14:36.504"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${API_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:36.504" endtime="20201021 12:14:39.615"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20201021 12:14:39.616" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards-ontotest.oftrust.net/v2/Context/DataProductOutput/Sensor/"
        },
        "data": {
            "type": "object",
            "properties": {
                "sensors": {
                    "type": "array",
                    "default": []
                }
            },
            "required": [
                "sensors"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-10-21T09:14:39+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "https://api-external-test.oftrust.net/assemblin/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "XqUyoQh6W2wlKVJMr7CJhQvhruygpyFxmHQr3wJFMa8M4w0ZDL+BuLxFX+2NbKD/PE9NeO0hVa5d6xao+ZRVgH4H0NWlfcBVBfvI0qlPiAaFH5OHaXZVypAffbZFTA/lgQGZRh9obRlEOy9gByTyx1IU+azv9GGpvshOERQ9kGHptGOdLVQE2R+nFr9wm05bQ+HzJabiWRITs4jEMSWKhyiSi1h01Pq+NGAIj3Y36qCBJKp+khgxYGyUjE52M0VTds/0wQB2RQIgCPjDBxRrng8i/c9v/UxddtNhD2gCm+FNO7Xvu9lgpg4EnXGyHow29qZjI5W0kqWKihInObZqZsPOayDr/kN/9IolfdZQHYbs0m9/RYRY7kTLHndtEInmeSSwbCY6aZuz8qRTuNu2n3woR1011MD+lzd8zCNv9LoUFnacvgi7YuKArGDYl4Y/0W4x68Q3xpHNtcr05Ffagmkyg3PSJRNw0fiVNjUQ+Hu1X8Au2XOeeawkSf/LFl+/kaCUGr+R+Shhr6Jt3WuzV1JaRcOD9DWyyZ0Tpl1DP82ywe2DzJGs6n4XEvcPAOM+0lC6/jNBR5H+D70EZw13a/AgonHVZ6i0xtfKYSkhEW/kcS/l7nbchhQTtyMK6K4E4iO3SUEFJw05j2L1TAQ1aZJoIxkVtznwypQWmDLMi4Y="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20201021 12:14:39.615" endtime="20201021 12:14:39.619"></status>
</kw>
<status status="PASS" starttime="20201021 12:14:36.502" endtime="20201021 12:14:39.619"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:39.619" endtime="20201021 12:14:39.620"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
</arguments>
<status status="PASS" starttime="20201021 12:14:39.620" endtime="20201021 12:14:39.621"></status>
</kw>
<tags>
<tag>bug-0006</tag>
</tags>
<status status="PASS" starttime="20201021 12:14:36.497" endtime="20201021 12:14:39.621" critical="yes"></status>
</test>
<doc>Assemblin Temperature / CO2 sensors</doc>
<status status="PASS" starttime="20201021 12:14:30.114" endtime="20201021 12:14:39.623"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">bug-0001</stat>
<stat pass="1" fail="0">bug-0002</stat>
<stat pass="1" fail="0">bug-0003</stat>
<stat pass="1" fail="0">bug-0004</stat>
<stat pass="1" fail="0">bug-0005</stat>
<stat pass="1" fail="0">bug-0006</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
